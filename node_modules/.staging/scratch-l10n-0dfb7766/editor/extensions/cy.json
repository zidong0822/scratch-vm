{
    "music.changeTempo": {
        "message": "Newid tempo gan [TEMPO]",
        "description": "change tempo (speed) for notes, drums, and rests played"
    },
    "music.drumBass": {
        "message": "(2) Drwm Bas",
        "description": "Sound of bass drum as used in a standard drum kit"
    },
    "music.drumBongo": {
        "message": "(13) Bongo",
        "description": "Sound of a bongo being struck"
    },
    "music.drumCabasa": {
        "message": "(15) Cabasa",
        "description": "Sound of a cabasa being shaken"
    },
    "music.drumClaves": {
        "message": "(9) Clafiau",
        "description": "Sound of claves being struck together"
    },
    "music.drumClosedHiHat": {
        "message": "(^) Symbalau Pedal Troed Caeëdig",
        "description": "Sound of a drum stick hitting a hi-hat while closed"
    },
    "music.drumConga": {
        "message": "(14) Conga",
        "description": "Sound of a conga being struck"
    },
    "music.drumCowbell": {
        "message": "(11) Cloch Buwch",
        "description": "Sound of a cowbell being struck"
    },
    "music.drumCrashCymbal": {
        "message": "(4) Symbal",
        "description": "Sound of a drum stick hitting a crash cymbal"
    },
    "music.drumCuica": {
        "message": "(18) Cuica",
        "description": "Sound of a cuica being played"
    },
    "music.drumGuiro": {
        "message": "(16) Guiro",
        "description": "Sound of a guiro being played"
    },
    "music.drumHandClap": {
        "message": "(8) Clap Llaw",
        "description": "Sound of two hands clapping together"
    },
    "music.drumOpenHiHat": {
        "message": "(5) Symbalau Pedal Troed Agored",
        "description": "Sound of a drum stick hitting a hi-hat while open"
    },
    "music.drumSideStick": {
        "message": "(3) Pren ochr",
        "description": "Sound of a drum stick hitting the side of a drum (usually the snare)"
    },
    "music.drumSnare": {
        "message": "(1) Drwm Gwifrau",
        "description": "Sound of snare drum as used in a standard drum kit"
    },
    "music.drumTambourine": {
        "message": "(7) Tambwrîn",
        "description": "Sound of a tambourine being struck"
    },
    "music.drumTriangle": {
        "message": "(12) Triongl",
        "description": "Sound of a triangle (instrument) being struck"
    },
    "music.drumVibraslap": {
        "message": "(17) Vibraslap",
        "description": "Sound of a Vibraslap being played"
    },
    "music.drumWoodBlock": {
        "message": "(10) Bloc Pren",
        "description": "Sound of a wood block being struck"
    },
    "music.getTempo": {
        "message": "amseriad",
        "description": "get the current tempo (speed) for notes, drums, and rests played"
    },
    "music.instrumentBass": {
        "message": "(6) Bâs",
        "description": "Sound of an accoustic upright bass"
    },
    "music.instrumentBassoon": {
        "message": "(14) Basŵn",
        "description": "Sound of a bassoon being played"
    },
    "music.instrumentCello": {
        "message": "(8) Sielo",
        "description": "Sound of a cello being played with a bow"
    },
    "music.instrumentChoir": {
        "message": "(15) Côr",
        "description": "Sound of a choir singing"
    },
    "music.instrumentClarinet": {
        "message": "(10) Clarinét",
        "description": "Sound of a clarinet being played"
    },
    "music.instrumentElectricGuitar": {
        "message": "(5) Gitâr Drydan",
        "description": "Sound of an electric guitar"
    },
    "music.instrumentElectricPiano": {
        "message": "(2) Piano Trydan",
        "description": "Sound of an electric piano"
    },
    "music.instrumentFlute": {
        "message": "(12) Ffliwt",
        "description": "Sound of a flute being played"
    },
    "music.instrumentGuitar": {
        "message": "(4) Gitâr",
        "description": "Sound of an accoustic guitar"
    },
    "music.instrumentMarimba": {
        "message": "(19) Marimba",
        "description": "Sound of a marimba being struck"
    },
    "music.instrumentMusicBox": {
        "message": "(17) Blwch Cerddoriaeth",
        "description": "Sound of a music box playing"
    },
    "music.instrumentOrgan": {
        "message": "(3) Organ",
        "description": "Sound of an organ"
    },
    "music.instrumentPiano": {
        "message": "(1) Piano",
        "description": "Sound of a piano"
    },
    "music.instrumentPizzicato": {
        "message": "(7) Pizzicato",
        "description": "Sound of a string instrument (e.g. violin) being plucked"
    },
    "music.instrumentSaxophone": {
        "message": "(11) Sacsoffon",
        "description": "Sound of a saxophone being played"
    },
    "music.instrumentSteelDrum": {
        "message": "(18) Drwm Dur",
        "description": "Sound of a steel drum being struck"
    },
    "music.instrumentSynthLead": {
        "message": "(20) Synth Blaen",
        "description": "Sound of a \"lead\" synthesizer being played"
    },
    "music.instrumentSynthPad": {
        "message": "(21) Pad Synth",
        "description": "Sound of a \"pad\" synthesizer being played"
    },
    "music.instrumentTrombone": {
        "message": "(9) Trombon",
        "description": "Sound of a trombone being played"
    },
    "music.instrumentVibraphone": {
        "message": "(16) Fibraffon",
        "description": "Sound of a vibraphone being struck"
    },
    "music.instrumentWoodenFlute": {
        "message": "(13) Ffliwt Pren",
        "description": "Sound of a wooden flute being played"
    },
    "music.playDrumForBeats": {
        "message": "chwarae drwm [DRUM] am [BEATS] curiad",
        "description": "play drum sample for a number of beats"
    },
    "music.playNoteForBeats": {
        "message": "chwarae nodyn[NOTE]am [BEATS]curiad",
        "description": "play a note for a number of beats"
    },
    "music.restForBeats": {
        "message": "oedi am [BEATS]curiad",
        "description": "rest (play no sound) for a number of beats"
    },
    "music.setInstrument": {
        "message": "gosod offeryn i [INSTRUMENT]",
        "description": "set the instrument (e.g. piano, guitar, trombone) for notes played"
    },
    "music.setTempo": {
        "message": "gosod tempo [TEMPO]",
        "description": "set tempo (speed) for notes, drums, and rests played"
    },
    "pen.categoryName": {
        "message": "Pin",
        "description": "Label for the pen extension category"
    },
    "pen.changeColorParam": {
        "message": "newid pin [COLOR_PARAM]gan [VALUE]",
        "description": "change the state of a pen color parameter"
    },
    "pen.changeHue": {
        "message": "newid lliw pin gan [HUE]",
        "description": "legacy pen blocks - change pen color"
    },
    "pen.changeShade": {
        "message": "newid arlliw pin gan [SHADE]",
        "description": "legacy pen blocks - change pen shade"
    },
    "pen.changeSize": {
        "message": "newid maint pin gan [SIZE]",
        "description": "change the diameter of the trail left by a sprite"
    },
    "pen.clear": {
        "message": "dileu popeth",
        "description": "erase all pen trails and stamps"
    },
    "pen.colorMenu.brightness": {
        "message": "disgleirdeb",
        "description": "label for brightness element in color picker for pen extension"
    },
    "pen.colorMenu.color": {
        "message": "lliw",
        "description": "label for color element in color picker for pen extension"
    },
    "pen.colorMenu.saturation": {
        "message": "dirlawnder",
        "description": "label for saturation element in color picker for pen extension"
    },
    "pen.colorMenu.transparency": {
        "message": "tryloywder",
        "description": "label for transparency element in color picker for pen extension"
    },
    "pen.penDown": {
        "message": "pin i lawr",
        "description": "start leaving a trail when the sprite moves"
    },
    "pen.penUp": {
        "message": "pin i fyny",
        "description": "stop leaving a trail behind the sprite"
    },
    "pen.setColor": {
        "message": "gosod lliw pin i [COLOR]",
        "description": "set the pen color to a particular (RGB) value"
    },
    "pen.setColorParam": {
        "message": "gosod y pin [COLOR_PARAM]i [VALUE]",
        "description": "set the state for a pen color parameter e.g. saturation"
    },
    "pen.setHue": {
        "message": "gosod lliw pin i [HUE]",
        "description": "legacy pen blocks - set pen color to number"
    },
    "pen.setShade": {
        "message": "gosod arlliw pin i [SHADE]",
        "description": "legacy pen blocks - set pen shade"
    },
    "pen.setSize": {
        "message": "gosod maint pin i [SIZE]",
        "description": "set the diameter of a trail left by a sprite"
    },
    "pen.stamp": {
        "message": "stampio",
        "description": "render current costume on the background"
    },
    "speech.defaultWhenIHearValue": {
        "message": "ffwrdd a ni",
        "description": "The default phrase/word that, when heard, triggers the event."
    },
    "speech.extensionName": {
        "message": "Google Speech",
        "description": "Name of extension that adds speech recognition blocks. Do Not translate Google."
    },
    "speech.listenAndWait": {
        "message": "gwrando ac aros",
        "description": "Start listening to the microphone and wait for a result from the speech recognition system."
    },
    "speech.speechReporter": {
        "message": "lleferydd",
        "description": "Get the text of spoken words transcribed by the speech recognition system."
    },
    "speech.whenIHear": {
        "message": "pan fyddai'n clywed [PHRASE]",
        "description": "Event that triggers when the text entered on the block is recognized by the speech recognition system."
    },
    "text2speech.defaultTextToSpeak": {
        "message": "helo",
        "description": "hello: the default text to speak"
    },
    "text2speech.kitten": {
        "message": "cath fach",
        "description": "A baby cat."
    },
    "text2speech.max": {
        "message": "eilir",
        "description": "Name for a voice with ambiguous gender."
    },
    "text2speech.monster": {
        "message": "anghenfil",
        "description": "Name for a funny voice with a low pitch."
    },
    "text2speech.puppy": {
        "message": "ci bach",
        "description": "A baby dog."
    },
    "text2speech.quinn": {
        "message": "eirian",
        "description": "Name for a voice with ambiguous gender."
    },
    "text2speech.setVoiceBlock": {
        "message": "gosod llais i /VOICE/",
        "description": "Set the voice for speech synthesis."
    },
    "text2speech.speakAndWaitBlock": {
        "message": "siarad [WORDS]",
        "description": "Speak some words."
    },
    "text2speech.squeak": {
        "message": "gwich",
        "description": "Name for a funny voice with a high pitch."
    },
    "translate.categoryName": {
        "message": "Google Translate",
        "description": "Name of extension that adds translate blocks. Do Not translate Google"
    },
    "translate.defaultTextToTranslate": {
        "message": "helo",
        "description": "hello: the default text to translate"
    },
    "translate.translateBlock": {
        "message": "cyfieithu[WORDS] i'r [LANGUAGE]",
        "description": "translate some text to a different language"
    },
    "translate.viewerLanguage": {
        "message": "iaith",
        "description": "the languge of the project viewer"
    },
    "videoSensing.categoryName": {
        "message": "Synhwyro Fideo",
        "description": "Label for the video sensing extension category"
    },
    "videoSensing.direction": {
        "message": "cyfeiriad",
        "description": "Attribute for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
    },
    "videoSensing.motion": {
        "message": "symudiad",
        "description": "Attribute for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
    },
    "videoSensing.off": {
        "message": "i ffwrdd",
        "description": "Option for the \"turn video [STATE]\" block"
    },
    "videoSensing.on": {
        "message": "ymlaen",
        "description": "Option for the \"turn video [STATE]\" block"
    },
    "videoSensing.onFlipped": {
        "message": "wrth ei fflipio",
        "description": "Option for the \"turn video [STATE]\" block that causes the video to be flipped horizontally (reversed as in a mirror)"
    },
    "videoSensing.setVideoTransparency": {
        "message": "gosod tryloywder fideo i [TRANSPARENCY]",
        "description": "Controls transparency of the video preview layer"
    },
    "videoSensing.sprite": {
        "message": "corlun",
        "description": "Subject for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
    },
    "videoSensing.stage": {
        "message": "llwyfan",
        "description": "Subject for the \"video [ATTRIBUTE] on [SUBJECT]\" block"
    },
    "videoSensing.videoOn": {
        "message": "fideo [ATTRIBUTE] ar [SUBJECT]",
        "description": "Reporter that returns the amount of [ATTRIBUTE] for the selected [SUBJECT]"
    },
    "videoSensing.videoToggle": {
        "message": "troi fideo [VIDEO_STATE]",
        "description": "Controls display of the video preview layer"
    },
    "videoSensing.whenMotionGreaterThan": {
        "message": "pan mae symud fideo > [REFERENCE]",
        "description": "Event that triggers when the amount of motion is greater than [REFERENCE]"
    },
    "music.categoryName": {
        "message": "Cerddoriaeth",
        "description": "Label for the Music extension category"
    }
}